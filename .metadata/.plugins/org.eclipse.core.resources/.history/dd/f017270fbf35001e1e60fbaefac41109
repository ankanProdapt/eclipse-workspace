package yahtzee;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Main {
	private static String[] CATEGORIES = {"ONES", "TWOS", "THREES", "FOURS", "FIVES", "SIXES",
									"THREE_OF_A_KIND", "FOUR_OF_A_KIND", "FULL_HOUSE", 
									"SMALL_STRAIGHT", "LARGE_STRAIGHT", "YAHTZEE", "CHANCE"};
	
	public static List<String> getScoreCard() {
		Connection cnx = null;
		Statement stmt = null;
		ResultSet rs = null;
		
		List<String> scoreCard = new ArrayList<>();
		try {
			cnx = DriverManager.getConnection("jdbc:mysql://localhost: 3306/yahtzeeDB", "ankan2001prodapt", "we1c@me1");
			stmt = cnx.createStatement();
			for(String category: CATEGORIES) {
				String command = "SELECT * FROM scoreCard WHERE category = '" + category + "'";
				rs = stmt.executeQuery(command);
				
				String s = "";
				
				while(rs.next()) {
					s += rs.getString("category") + "     " + rs.getString("score");
				}
				
				scoreCard.add(s);
			}
			
		} catch(SQLException e) {
			e.printStackTrace();
		}
		
		return scoreCard;
	}
	
	//If Category is already filled, returns false
	public static boolean updateCategoryScore(String category, List<Die> dice) {
		Connection cnx = null;
		Statement stmt = null;
		ResultSet rs = null;
		
		try {
			cnx = DriverManager.getConnection("jdbc:mysql://localhost: 3306/yahtzeeDB", "ankan2001prodapt", "we1c@me1");
			stmt = cnx.createStatement();
			String command = "SELECT * FROM scoreCard WHERE category = '" + category + "'";
			rs = stmt.executeQuery(command);
			
			while(rs.next()) {
				String x = rs.getString("score");
				if(x == null) {
					int score = 0;
					int categoryIndex = Arrays.asList(CATEGORIES).indexOf(category);
					
					switch(categoryIndex) {
					case 0:
						score = CategoryCheck.ones(dice);
						break;
					case 1:
						score = CategoryCheck.twos(dice);
						break;
					case 2:
						score = CategoryCheck.threes(dice);
						break;
					case 3:
						score = CategoryCheck.fours(dice);
						break;
					case 4:
						score = CategoryCheck.fives(dice);
						break;
					case 5:
						score = CategoryCheck.sixes(dice);
						break;
					case 6:
						score = CategoryCheck.threeOfAKind(dice);
						break;
					case 7:
						score = CategoryCheck.fourOfAKind(dice);
						break;
					case 8:
						score = CategoryCheck.fullHouse(dice);
						break;
					case 9:
						score = CategoryCheck.smallStraight(dice);
						break;
					case 10:
						score = CategoryCheck.largeStraight(dice);
						break;
					case 11:
						score = CategoryCheck.yahtzee(dice);
						break;
					case 12:
						score = CategoryCheck.chance(dice);
						break;
					}
					
					command = "UPDATE scoreCard SET score = " + score + " WHERE category = '" + category + "'";
					
					stmt.executeUpdate(command);
					
					return true;
				}
				else {
					return false;
				}
			}
			return false;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
		
	}
	
	public static int getScore() {
		Connection cnx = null;
		Statement stmt = null;
		ResultSet rs = null;
		
		try {
			cnx = DriverManager.getConnection("jdbc:mysql://localhost: 3306/yahtzeeDB", "ankan2001prodapt", "we1c@me1");
			stmt = cnx.createStatement();
			String command = "SELECT SUM(score) AS TOTAL_SCORE FROM scoreCard";
			
			rs = stmt.executeQuery(command);
			rs.next();
			return rs.getInt("TOTAL_SCORE");
			
			
		} catch(SQLException e) {
			e.printStackTrace();
		}
		
		return 0;
	}
	
	public static boolean isGameOver() {
		Connection cnx = null;
		Statement stmt = null;
		ResultSet rs = null;
		
		try {
			cnx = DriverManager.getConnection("jdbc:mysql://localhost: 3306/yahtzeeDB", "ankan2001prodapt", "we1c@me1");
			stmt = cnx.createStatement();
			String command = "SELECT COUNT(*) AS NULL_COUNT FROM scoreCard WHERE score is null";
			
			rs = stmt.executeQuery(command);
			rs.next();
			System.out.println(rs.getInt("NULL_COUNT"));
			if(rs.getInt("NULL_COUNT") == 0) {
				return true;
			}
			
			return false;
		
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return false;
		
	}
	
	public static void reset() {
		Connection cnx = null;
		Statement stmt = null;
		ResultSet rs = null;
		String command;
		
		try {
			cnx = DriverManager.getConnection("jdbc:mysql://localhost: 3306/yahtzeeDB", "ankan2001prodapt", "we1c@me1");
			stmt = cnx.createStatement();
			
			int score = getScore();
			command = "INSERT INTO scores VALUES(NOW()," + score + ")";
			
			for(String category: CATEGORIES) {
				command = "UPDATE scoreCard SET score = null";
				stmt.executeUpdate(command);
			}
			
		} catch(SQLException e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		YahtzeeDice dice = new YahtzeeDice();
		
		while(true) {
			if(isGameOver()) {
				System.out.println("GAME OVER");
				System.out.println("Score: " + getScore());
				reset();
				System.out.println("\n\nNEW GAME");
			}
			
		}
		System.out.println(getScore());
		System.out.println(getScoreCard());
	}
}
