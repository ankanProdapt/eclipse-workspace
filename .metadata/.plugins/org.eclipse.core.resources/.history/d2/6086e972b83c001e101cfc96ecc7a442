package chess;

public class Pawn extends Piece{

	public Pawn(String colour, int row, String column) {
		super("Pawn", colour, row, column);
	}
	
	@Override
	public boolean canMoveTo(int destinationRow, String destinationCol, Piece[][] chessBoard) {
        int dy = Math.abs(destinationRow - row);
        int dx = Math.abs(ChessBoard.columns.indexOf(column) - ChessBoard.columns.indexOf(destinationCol));
        
        if (dy == 1 && dx == 0) {
        	return chessBoard[destinationRow - 1][ChessBoard.columns.indexOf(destinationCol)] == null;
        }
        
        if (dy == 2 && dx == 0) {
        	int midRow = (destinationRow + row) / 2;
        	return (chessBoard[destinationRow - 1][ChessBoard.columns.indexOf(column)] == null &&
        			chessBoard[midRow - 1][ChessBoard.columns.indexOf(column)] == null &&
        			((colour.equals("white") && row == 2) || (colour.equals("black") && row == 7)) );
        }
        return false;
    }
}
