package tuples;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

public class Tuple<T> implements Collection<T> {
	
	List<T> tuple;
	private T[] objects;
	
	public Tuple(T... objects) {
		this.objects = objects;
		tuple = Arrays.asList(objects);
	}

	@Override
	public boolean add(T arg0) {
		throw new UnsupportedOperationException("Adding is unsuported");
	}

	@Override
	public boolean addAll(Collection<? extends T> arg0) {
		throw new UnsupportedOperationException("Adding is unsuported");
	}

	@Override
	public void clear() {
		throw new UnsupportedOperationException("Removing is unsuported");
	}

	@Override
	public boolean contains(Object arg0) {
		for(Object obj: this) {
			if(obj.equals(arg0)) {
				return true;
			}
		}
		return false;
	}

	@Override
	public boolean containsAll(Collection<?> arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Iterator<T> iterator() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean remove(Object arg0) {
		throw new UnsupportedOperationException("Removing is unsuported");
	}

	@Override
	public boolean removeAll(Collection<?> arg0) {
		throw new UnsupportedOperationException("Removing is unsuported");
	}

	@Override
	public boolean retainAll(Collection<?> arg0) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int size() {
		return this.size();
	}

	@Override
	public Object[] toArray() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public <T> T[] toArray(T[] arg0) {
		// TODO Auto-generated method stub
		return null;
	}
}
